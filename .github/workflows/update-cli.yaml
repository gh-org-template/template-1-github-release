name: Update Dockerfile Base Image

on:
  push:
    branches:
    - main
  workflow_dispatch:
  repository_dispatch:
    types: [update-required]
  schedule:
    - cron: '0 0 * * 0'

jobs:
  update-dockerfile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Set up Node.js (for Updatecli)
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install Updatecli
        run: |
          curl -LO https://github.com/updatecli/updatecli/releases/latest/download/updatecli_Linux_x86_64.tar.gz
          tar -xzvf updatecli_Linux_x86_64.tar.gz -C /usr/local/bin

      - name: Run Updatecli to update Dockerfile
        env:
          UPDATECLI_GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          UPDATECLI_GITHUB_ACTOR: ${{ github.actor }}
        run: |
          for file in manifest*.yaml; do
            updatecli diff --config "$file"
            updatecli apply --config "$file"
          done
          rm -rf updatecli*.tar.gz

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "chore(deps): update dependencies per updatecli / manifest.yaml"
          branch: "chore/deps-updatecli"
          title: "chore(deps): Update Dependencies per updatecli"
          body: "This PR updates the dependencies per the updatecli manifest.yaml file"
          labels: "auto-update"

      - name: Approve PR
        if: ${{ steps.cpr.outputs.pull-request-url != '' }}
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

      - name: Enable auto-merge
        if: ${{ steps.cpr.outputs.pull-request-url != '' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
